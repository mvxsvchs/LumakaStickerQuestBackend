/*
 * Datenbankschema f√ºr Lumaka StickerQuest
 * Beschreibung: Tabellen zur Verwaltung von Benutzern, Aufgaben, Stickern und Bingosystem
 */

-- =============================================
-- BENUTZER UND AUTHENTIFIZIERUNG
-- =============================================
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    email VARCHAR(255) NOT NULL,
    birth_date DATE,
    password_hash VARCHAR(255) NOT NULL,
    points INTEGER DEFAULT 0,
    sticker_id INTEGER[],
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- =============================================
-- AUFGABEN
-- =============================================
/*
Category IDs:
category.general (Allgemein)        1
category.work (Arbeit)              2
category.household (Haushalt)       3
category.school (Schule)            4
category.selfcare (Selbstpflege)    5
category.gym (Sport)                6
*/
CREATE TABLE categories (
    category_id SERIAL PRIMARY KEY,
    category_name TEXT
);

CREATE TABLE user_tasks (
    task_id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    task_description TEXT,
    category_id INTEGER REFERENCES categories(category_id),
    points_reward INTEGER DEFAULT 10,
    is_completed BOOLEAN DEFAULT false,
    position INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE predefined_tasks (
    task_id SERIAL PRIMARY KEY,
    task_description TEXT,
    category_id INTEGER REFERENCES categories(category_id),
    points_reward INTEGER DEFAULT 10,
--    is_completed BOOLEAN DEFAULT false, <--- ergibt keinen Sinn, wenn jeder User auf diese Tabelle zugreift
    position INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- =============================================
-- Bingoboard & Felder
-- =============================================
CREATE TABLE bingo_boards (
    board_id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    is_completed BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE bingo_fields (
    field_id SERIAL PRIMARY KEY,
    field_name VARCHAR(2) UNIQUE NOT NULL,
    sticker VARCHAR(255) NULL,
    board_id INTEGER REFERENCES bingo_boards(board_id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
